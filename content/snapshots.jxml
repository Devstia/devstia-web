<?
// Sample data structure. In a real scenario, this would be fetched from a file or API.
const snapshotData = [
    {
        "name": "cp-local250522-amd64",
        "children": [
            {
                "name": "dev-branch-feature-x",
                "children": [
                    {
                        "name": "sub-feature-test",
                        "children": []
                    }
                ]
            },
            {
                "name": "staging-release",
                "children": []
            }
        ]
    },
    {
        "name": "clean-install-v2.0.1",
        "children": []
    }
];
const currentSnapshot = "sub-feature-test";

// A reusable SVG icon for the snapshots
const snapshotIcon = `
<svg class="tree-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M12 16C13.6569 16 15 14.6569 15 13C15 11.3431 13.6569 10 12 10C10.3431 10 9 11.3431 9 13C9 14.6569 10.3431 16 12 16Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M3 16.8V9.2C3 8.0799 3 7.51984 3.21799 7.09202C3.40973 6.71569 3.71569 6.40973 4.09202 6.21799C4.51984 6 5.0799 6 6.2 6H7.25464C7.37758 6 7.43905 6 7.49576 5.9935C7.79166 5.95961 8.05705 5.79559 8.21969 5.54609C8.25086 5.49827 8.27836 5.44328 8.33333 5.33333C8.44329 5.11342 8.49827 5.00346 8.56062 4.90782C8.8859 4.40882 9.41668 4.08078 10.0085 4.01299C10.1219 4 10.2448 4 10.4907 4H13.5093C13.7552 4 13.8781 4 13.9915 4.01299C14.5833 4.08078 15.1141 4.40882 15.4394 4.90782C15.5017 5.00345 15.5567 5.11345 15.6667 5.33333C15.7216 5.44329 15.7491 5.49827 15.7803 5.54609C15.943 5.79559 16.2083 5.95961 16.5042 5.9935C16.561 6 16.6224 6 16.7454 6H17.8C18.9201 6 19.4802 6 19.908 6.21799C20.2843 6.40973 20.5903 6.71569 20.782 7.09202C21 7.51984 21 8.0799 21 9.2V16.8C21 17.9201 21 18.4802 20.782 18.908C20.5903 19.2843 20.2843 19.5903 19.908 19.782C19.4802 20 18.9201 20 17.8 20H6.2C5.0799 20 4.51984 20 4.09202 19.782C3.71569 19.5903 3.40973 19.2843 3.21799 18.908C3 18.4802 3 17.9201 3 16.8Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`;

// A reusable SVG icon for the servers (root items)
const serverIcon = `
<svg class="tree-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
    <path d="M3 4m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z"></path>
    <path d="M3 12m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z"></path>
    <path d="M7 8l0 .01"></path>
    <path d="M7 16l0 .01"></path>
</svg> 
`;

/**
 * Recursively generates the HTML for the tree structure.
 * @param {Array} nodes - The array of snapshot nodes.
 * @param {number} [depth=0] - The current depth in the tree.
 * @returns {string} The generated HTML string.
 */
function buildTree(nodes, depth = 0) {
    if (!nodes || nodes.length === 0) {
        return '';
    }

    let html = '<ul>';
    for (const node of nodes) {
        const isCurrent = node.name === currentSnapshot;
        const indicator = isCurrent ? '<span class="current-indicator">&#9654;</span>' : '';
        const currentClass = isCurrent ? ' current-snapshot' : '';
        const icon = depth === 0 ? serverIcon : snapshotIcon;
        
        html += '<li>';
        html += `<div class="tree-item${currentClass}">${indicator}${icon}<span>${node.name}</span></div>`;
        // If there are children, recursively build their subtree
        if (node.children && node.children.length > 0) {
            html += buildTree(node.children, depth + 1);
        }
        html += '</li>';
    }
    html += '</ul>';
    return html;
}
?>

<h2>Snapshots</h2>
<article>
    <div class="tree">
        <? _e(buildTree(snapshotData)); ?>
    </div>
</article>
<p>This page displays the hierarchy of server snapshots. You can create new snapshots, revert to existing ones, or delete them.</p>
