<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Devstia PW - Settings</title>
    <link rel="icon" type="image/png" href="./images/dev_pw.png">
    <link rel="stylesheet" href="css/pico.min.css">
    <style>
        * { /* Basic reset - Use cautiously or refine */
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        .info h5 {
            color: var(--pico-h1-color);
        }
        .info .title {
            font-weight: bold;
            color: var(--pico-color);
            display: block;
        }
        .info .value {
            color: var(--pico-muted-color);
            display: block;
            margin-bottom: 0.5rem;
        }
        .info .icon {
            width: 50%;
            max-width: 250px;
            height: auto;
            margin-top: -25px;
            margin-bottom: 24px;
        }
        :root {
            --sidebar-width-desktop: 300px; /* Adjust as needed */
            --header-height: 64px;
        }

        body {
            margin: 0;
            font-family: sans-serif;
            display: flex;
            min-height: 100vh;
            flex-direction: column; /* For header/content structure */
        }

        .header {
            height: var(--header-height);
            background-color: var(--pico-background-color);
            display: flex;
            align-items: center;
            padding: 0 1rem;
            border-bottom: 1px solid var(--pico-muted-border-color);
        }
        #logo {
            width: 100%;
            background-image: url('./images/devstia-light.png'); /* Default light mode logo */
            background-size: contain;
        }

        /* Dark mode logo styles */
        /* Applied when OS prefers dark and html tag does NOT have data-theme="light" */
        @media (prefers-color-scheme: dark) {
          :root:not([data-theme="light"]) #logo {
            background-image: url('./images/devstia-dark.png'); /* Dark mode logo */
          }
        }
        #diskdrivespace {
            width: 120px;
            height: 120px;
            background-image: conic-gradient(darkgreen 99%, coral 1%);
            border-radius: 50%;
            border: 2px solid var(--pico-contrast);
            opacity: 0.3;
            float: right;
            margin-top: -30px;
        }
        input[type="number"] {
            max-width:125px;
            max-height: 32px;
            margin: 12px 0 -12px;
        }
        input[type="password"],
        input[type="text"] {
            max-width:200px;
            max-height: 32px;
            margin: 12px 0 -12px;
        }

        /* Applied when html tag has data-theme="dark" explicitly set */
        html[data-theme="dark"] #logo {
            background-image: url('./images/devstia-dark.png'); /* Dark mode logo */
        }
        .settings {
            font-size: smaller;
            display: flex;
        }
        .settings button {
            min-width: 150px;
        }
        .ssl-certificate button,
        .terminal-ssh-keys button {
            min-width: 300px;
        }
        .settings button.disabled, .settings .icon.disabled {
            opacity: 0.4;
            cursor: not-allowed !important;
        }
        .settings .col1 {
            width: 50%;
        }
        .settings .col2 {
            width: 50%;
            text-align: right;
            zoom: 0.8;
            margin-right: 25px;
        }
        .settings .col2 button {
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
            margin-top: 0.8rem;
        }
        .settings .row {
            min-height: 2.8rem;
        }
        .settings label:has(> input[role="switch"]) {
            margin-top: 0.25rem;
            margin-left: -15px;
            padding-right: 15px;
            zoom: 1.26;
        }
        .settings .powergroup,
        .settings .dnsproxy,
        .settings .drivegroup {
            display:inline-flex;
            min-width: max-content;
        }
        .settings .dnsproxy {
            margin: 30px -10px 0px;
        }
        .settings button.restart {
            margin-top: -5px;
        }
        .settings .drivegroup {
            margin-top: -55px;
        }
        #edition {
            margin: 4px;
            float: right;
        }
        #sites {
            padding: 2px 4px;
            font-size: 8px;
            vertical-align: 7px;
        }
        .hamburger-menu {
            display: none; /* Hidden on desktop */
            font-size: 1.5rem;
            cursor: pointer;
            background: none;
            border: none;
            padding: 0.5rem;
            margin-right: 1rem;
            color: var(--pico-color-primary);
        }

        .app-container {
            display: flex;
            flex-grow: 1; /* Takes remaining vertical space */
        }

        .sidebar {
            width: var(--sidebar-width-desktop);
            background-color: var(--pico-code-background-color);
            padding: 1rem;
            transition: transform 0.3s ease;
            height: calc(100vh - var(--header-height)); /* Full height minus header */
            overflow-y: none;
            flex-shrink: 0; /* Prevent sidebar from shrinking */
            border-right: 1px solid var(--pico-muted-border-color);
        }
        .sidebar nav ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        .sidebar nav li a {
            display: block;
            padding: 0.5rem 0.5rem;
            text-decoration: none;
            color: var(--pico-color);
        }
        .sidebar nav li a:hover {
            background-color: var(--pico-muted-border-color);
        }

        .sidebar nav li a.active {
           background-color: var(--pico-primary);
           color: var(--pico-primary-inverse);
        }

        .sidebar .icon {
           display: inline-block;
           border-radius: var(--pico-border-radius);
           padding: 4px 6px;
           margin: -2px 6px -2px -2px;
        }
        .sidebar {
            .server  {
                background: linear-gradient(150deg, rgba(220, 220, 220, 1) 0%, rgba(150, 150, 150, 1) 100%);
            }
            .snapshots {
                background: linear-gradient(150deg, rgb(255, 173, 173) 0%, rgb(176, 97, 97) 100%);                
            }
            .security  {
                background: linear-gradient(150deg, rgba(255, 236, 173, 1) 0%, rgba(176, 151, 97, 1) 100%);
            }
            .about {
                background: linear-gradient(150deg, rgb(173, 208, 255) 0%, rgb(97, 115, 176) 100%);
            }
            .license {
                background: linear-gradient(150deg, rgb(173, 255, 173) 0%, rgb(97, 176, 97) 100%);
            }
        }
        .sidebar .icon svg {
            background: transparent;
            border-radius: 0;
            padding: 0;
            color: var(--pico-contrast-inverse);
            margin: -2px 0 0 0;
        }
        .main-content {
            flex-grow: 1; /* Takes remaining horizontal space */
            padding: 1rem;
            height: calc(100vh - var(--header-height)); /* Full height minus header */
            overflow-y: auto;
        }
        #results-pane > article {
            background-color: var(--pico-code-background-color);
            border: 1px solid var(--pico-muted-border-color);
        }

        /* Mobile Styles */
        @media (max-width: 768px) {
            .hamburger-menu {
                display: block; /* Show hamburger */
            }

            .sidebar {
                position: fixed; /* Fixed position to overlay */
                top: var(--header-height);
                left: 0;
                width: 80%; /* Or a fixed width like 250px */
                max-width: 240px;
                height: calc(100vh - var(--header-height));
                transform: translateX(-100%); /* Hide off-screen */
                z-index: 1000;
                border-right: 1px solid #ccc;
                /* background-color: #f8f8f8; /*Slightly different background */
            }

            .sidebar.open {
                transform: translateX(0); /* Slide in */
            }

            /* Optional: Add an overlay when sidebar is open */
            .overlay {
                display: none;
                position: fixed;
                top: var(--header-height);
                left: 0;
                width: 100%;
                height: calc(100vh - var(--header-height));
                /* background-color: rgba(0, 0, 0, 0.5); */
                z-index: 999;
            }
             .overlay.open {
                display: block;
             }
        }
        footer {
            font-size:x-small;
        }

        /* Desktop Layout Refinement (Approx 1/3 sidebar, 2/3 content) */
        @media (min-width: 769px) {
             .app-container {
                display: flex;
             }
             .sidebar {
                width: var(--sidebar-width-desktop); /* Explicitly set width */
                flex-shrink: 0; /* Prevent shrinking */
             }
             .main-content {
                 /* Let it grow to fill remaining space */
                 flex-grow: 2; /* Aim for roughly 2x sidebar width, adjust flex basis if needed */
             }
        }

        #setup-modal {
            display: flex;
            position: fixed;
            z-index: 2000;
            left: 0; top: 0;
            width: 100vw; height: 100vh;
            background: rgba(0,0,0,0.4);
            align-items: center;
            justify-content: center;
        }
        #modal-content {
            background: var(--pico-code-background-color);
            padding: 2rem;
            border-radius: 8px;
            max-width: 600px;
            margin: auto;
            position: relative;
            min-width: 400px;
        }

        /* --- CSS Tree for Snapshots (Table Ledger Style) --- */
        .tree {
            width: 100%;
            border-collapse: collapse;
            border-spacing: 0;
        }

        .tree td {
            padding: 0.25rem 0.75rem;
            border: 1px solid var(--pico-muted-border-color);
        }

        .tree tr td {
             background-color: var(--pico-code-background-color);
        }

        .tree .tree-item {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .tree .tree-item svg {
            width: 36px;
            height: 36px;
            color: var(--pico-muted-color);
            flex-shrink: 0; /* Prevent icons from shrinking */
        }

        .tree .current-indicator {
            width: 18px;
            height: 18px;
            margin-right: 4px;
        }

        /* Style for the entire current snapshot row */
        .tree tr.current-snapshot {
            background-color: rgba(67, 160, 71, 0.1) !important; /* Subtle green, overrides even/odd */
        }

        .tree tr.current-snapshot td {
            color: var(--pico-color-green, #43a047);
            font-weight: bold;
        }

        .tree tr.current-snapshot svg {
            color: currentColor;
        }
    </style>
    <script src="./js/htmx.min.js" defer></script>
    <script src="./js/string.js" defer></script>
</head>
<body>
    <div id="overlay"></div>
    <header class="header">
        <button class="hamburger-menu" id="hamburger">&#9776;</button>
        <div id="logo">
            <h1 id="edition">Personal Web &infin; <button id="sites" class="outline secondary" title="Number of sites">0</button></h1>
        </div>
    </header>
    <div class="app-container">
        <aside class="sidebar" id="sidebar">
            <nav>
                <ul>
                    <li>
                        <a href="#server" class="active" hx-get="content/server.jxml" hx-target="#results-pane" hx-swap="innerHTML">
                            <div class="icon server">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                    <path d="M3 4m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z"></path>
                                    <path d="M3 12m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v2a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z"></path>
                                    <path d="M7 8l0 .01"></path>
                                    <path d="M7 16l0 .01"></path>
                                </svg> 
                            </div>Server</a>
                    </li>
                    <li><a href="#snapshots" hx-get="content/snapshots.jxml" hx-target="#results-pane" hx-swap="innerHTML">
                        <div class="icon snapshots">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12 16C13.6569 16 15 14.6569 15 13C15 11.3431 13.6569 10 12 10C10.3431 10 9 11.3431 9 13C9 14.6569 10.3431 16 12 16Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <path d="M3 16.8V9.2C3 8.0799 3 7.51984 3.21799 7.09202C3.40973 6.71569 3.71569 6.40973 4.09202 6.21799C4.51984 6 5.0799 6 6.2 6H7.25464C7.37758 6 7.43905 6 7.49576 5.9935C7.79166 5.95961 8.05705 5.79559 8.21969 5.54609C8.25086 5.49827 8.27836 5.44328 8.33333 5.33333C8.44329 5.11342 8.49827 5.00346 8.56062 4.90782C8.8859 4.40882 9.41668 4.08078 10.0085 4.01299C10.1219 4 10.2448 4 10.4907 4H13.5093C13.7552 4 13.8781 4 13.9915 4.01299C14.5833 4.08078 15.1141 4.40882 15.4394 4.90782C15.5017 5.00345 15.5567 5.11345 15.6667 5.33333C15.7216 5.44329 15.7491 5.49827 15.7803 5.54609C15.943 5.79559 16.2083 5.95961 16.5042 5.9935C16.561 6 16.6224 6 16.7454 6H17.8C18.9201 6 19.4802 6 19.908 6.21799C20.2843 6.40973 20.5903 6.71569 20.782 7.09202C21 7.51984 21 8.0799 21 9.2V16.8C21 17.9201 21 18.4802 20.782 18.908C20.5903 19.2843 20.2843 19.5903 19.908 19.782C19.4802 20 18.9201 20 17.8 20H6.2C5.0799 20 4.51984 20 4.09202 19.782C3.71569 19.5903 3.40973 19.2843 3.21799 18.908C3 18.4802 3 17.9201 3 16.8Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                        </div>Snapshots</a>
                    </li>
                    <li><a href="#security" hx-get="content/security.jxml" hx-target="#results-pane" hx-swap="innerHTML">
                        <div class="icon security">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z"></path>
                                <path d="M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0"></path>
                                <path d="M8 11v-4a4 4 0 1 1 8 0v4"></path>
                            </svg> 
                        </div>Security</a>
                    </li>
                    <li><a href="#about" hx-get="content/about.jxml" hx-target="#results-pane" hx-swap="innerHTML">
                        <div class="icon about">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0"></path>
                                <path d="M12 9h.01"></path>
                                <path d="M11 12h1v4h1"></path>
                            </svg> 
                        </div>About</a>
                    </li>
                    <li><a href="#license" hx-get="content/license.jxml" hx-target="#results-pane" hx-swap="innerHTML">
                        <div class="icon license">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M14 3v4a1 1 0 0 0 1 1h4"></path>
                                <path d="M5 8v-3a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-5"></path>
                                <path d="M6 14m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"></path>
                                <path d="M4.5 17l-1.5 5l3 -1.5l3 1.5l-1.5 -5"></path>
                            </svg> 
                        </div>License</a>
                    </li>
                </ul>
            </nav>
        </aside>
        <main class="main-content" id="results-pane" hx-get="content/server.jxml" hx-trigger="load">
            <h1>Loading...</h1>
        </main>
    </div>
    <script>
        const hamburger = document.getElementById('hamburger');
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('overlay');
        const mainContent = document.getElementById('results-pane'); // Or body
        const sidebarNav = sidebar.querySelector('nav'); // Get the nav element

        function closeSidebar() {
            sidebar.classList.remove('open');
            overlay.classList.remove('open');
        }

        hamburger.addEventListener('click', (e) => {
            e.stopPropagation(); // Prevent click from closing immediately if overlay is used
            sidebar.classList.toggle('open');
            overlay.classList.toggle('open'); // Toggle overlay as well
        });

        // Close sidebar if clicking on the overlay or the main content area
        overlay.addEventListener('click', closeSidebar);
        mainContent.addEventListener('click', (e) => {
             // Only close if the sidebar is actually open and the click wasn't on the hamburger itself
             if (sidebar.classList.contains('open') && !hamburger.contains(e.target)) {
                 closeSidebar();
             }
        });

        // Handle active state and close sidebar on menu item click
        sidebarNav.addEventListener('click', (e) => {
            if (e.target.tagName === 'A') {
                // Remove active class from previously active item
                const currentActive = sidebarNav.querySelector('a.active');
                if (currentActive) {
                    currentActive.classList.remove('active');
                }
                // Add active class to the clicked item
                e.target.classList.add('active');

                // Close sidebar (especially useful on mobile)
                closeSidebar();
            }
        });

    </script>
</body>
</html>
